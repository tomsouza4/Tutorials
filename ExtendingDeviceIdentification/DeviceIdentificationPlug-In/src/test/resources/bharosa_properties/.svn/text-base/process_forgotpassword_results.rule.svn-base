<!--This file is customized for desert forgot password runtime  -->
<rule name="Block" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("Block")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing Block condition");
        }

        finalAction.append("Block");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="challenge_block" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("challenge_block")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing challenge_block condition");
        }

        finalAction.append("challenge_block");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="RegistrationRequired" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("RegistrationRequired")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing RegistrationRequired condition");
        }

        finalAction.append("RegistrationRequired");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="Challenge" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("Challenge")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing Challenge condition");
        }

        finalAction.append("Challenge");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="ChallengeHTML" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeHTML")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeHTML condition");
        }

        finalAction.append("ChallengeHTML");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="ChallengeQuestionPad" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeQuestionPad")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeQuestionPad condition");
        }

        finalAction.append("ChallengeQuestionPad");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="ChallengeQuestionPadGeneric" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeQuestionPadGeneric")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeQuestionPadGeneric condition");
        }

        finalAction.append("ChallengeQuestionPadGeneric");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="ChallengeTextPad" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeTextPad")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeTextPad condition");
        }

        finalAction.append("ChallengeTextPad");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="ChallengePinPad" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengePinPad")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengePinPad condition");
        }

        finalAction.append("ChallengePinPad");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="ChallengeKeypadFull" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeKeypadFull")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeKeypadFull condition");
        }

        finalAction.append("ChallengeKeypadFull");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="ChallengeKeypadAlpha" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeKeypadAlpha")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeKeypadAlpha condition");
        }

        finalAction.append("ChallengeKeypadAlpha");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="Default No Result" no-loop="true" salience="10">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>true</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("No rules result, so lets allow the user ");
        }

        finalAction.append("Allow");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
