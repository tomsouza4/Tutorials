<rule name="Logout" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("Logout")</java:condition>

    <java:consequence>
        if (logger != null){
        	logger.debug("Executing Logout condition");
        }
        finalAction.append("Logout");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="Block" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("Block")</java:condition>

    <java:consequence>
        if (logger != null){
        	logger.debug("Executing Block condition");
        }
        finalAction.append("Block");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="challenge_block" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("challenge_block")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing challenge_block condition");
        }

        finalAction.append("challenge_block");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="ChallengeQuestionPad" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeQuestionPad")</java:condition>

    <java:consequence>
        if (logger != null){
        	logger.debug("Executing ChallengeQuestionPad condition");
        }
        finalAction.append("ChallengeQuestionPad");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="SmsChallenge" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("SmsChallenge")</java:condition>

    <java:consequence>
        if (logger != null){
        	logger.debug("Executing SmsChallenge condition");
        }
        finalAction.append("SmsChallenge");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="EmailChallenge" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("EmailChallenge")</java:condition>

    <java:consequence>
        if (logger != null){
        	logger.debug("Executing EmailChallenge condition");
        }
        finalAction.append("EmailChallenge");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>

<rule name="Default No Result" no-loop="true" salience="10">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

	<java:condition>true</java:condition>

	<java:consequence>
        if (logger != null){
    	    logger.debug("No rules result, so lets Allow the user ");
        }
        finalAction.append("Allow");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
