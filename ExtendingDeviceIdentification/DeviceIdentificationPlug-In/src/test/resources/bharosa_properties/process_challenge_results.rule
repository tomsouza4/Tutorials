<!-- This rule file is customized for desert challenge runtime -->
<rule name="Block" no-loop="true" salience="100">
	<parameter identifier="actionList">
		<class>java.util.List</class>
	</parameter>

	<java:condition>actionList.contains("Block")</java:condition>

	<java:consequence>
		if (logger != null){
		logger.debug("Executing Block condition");
		}

		finalAction.append("Block");
		drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
	</java:consequence>
</rule>
<rule name="challenge_block" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("challenge_block")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing challenge_block condition");
        }

        finalAction.append("challenge_block");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="ChallengeQuestion" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeQuestion")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeQuestion condition");
        }

        finalAction.append("ChallengeQuestion");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="ChallengeSMS" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeSMS")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeSMS condition");
        }

        finalAction.append("ChallengeSMS");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="ChallengeEmail" no-loop="true" salience="100">
    <parameter identifier="actionList">
        <class>java.util.List</class>
    </parameter>

    <java:condition>actionList.contains("ChallengeEmail")</java:condition>

    <java:consequence>
        if (logger != null){
        logger.debug("Executing ChallengeEmail condition");
        }

        finalAction.append("ChallengeEmail");
        drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
    </java:consequence>
</rule>
<rule name="Default No Result" no-loop="true" salience="10">
	<parameter identifier="actionList">
		<class>java.util.List</class>
	</parameter>

	<java:condition>true</java:condition>

	<java:consequence>
		if (logger != null){
		logger.debug("No rules result, so lets allow the user ");
		}

		finalAction.append("Allow");
		drools.clearAgenda();  <!-- This stops any other rules from being evaluated -->
	</java:consequence>
</rule>
